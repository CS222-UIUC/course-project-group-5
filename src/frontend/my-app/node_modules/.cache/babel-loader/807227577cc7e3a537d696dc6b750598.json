{"ast":null,"code":"import _toConsumableArray from \"/Users/minhphan/Dropbox/Mac/Documents/CS222/course-project-group-5/src/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport { propToStyleFunction } from '../getThemeValue';\n\nvar splitProps = function splitProps(props) {\n  var result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  Object.keys(props).forEach(function (prop) {\n    if (propToStyleFunction[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\n\nexport default function extendSxProp(props) {\n  var inSx = props.sx,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _splitProps = splitProps(other),\n      systemProps = _splitProps.systemProps,\n      otherProps = _splitProps.otherProps;\n\n  var finalSx;\n\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps].concat(_toConsumableArray(inSx));\n  } else if (typeof inSx === 'function') {\n    finalSx = function finalSx() {\n      var result = inSx.apply(void 0, arguments);\n\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","map":null,"metadata":{},"sourceType":"module"}